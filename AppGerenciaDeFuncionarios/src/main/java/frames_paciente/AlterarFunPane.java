/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package frames_paciente;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import model.connector.myConnection;

/**
 *
 * @author PabloCarrijo
 */
public class AlterarFunPane extends javax.swing.JInternalFrame {

    /**
     * Creates new form AlterarFunPane
     */
    private AlterarFunPaneEndereco desktopPaneEndereco;
    private AlterarFunPaneDadosBancarios desktopPaneDadosBancarios;
    private AlterarFunContato desktopPaneContato;
    private AlterarFunPaneDadosPessoais desktopPaneDadosPesosas;

    private DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    private String nameConsulta;

    private Connection conn = null;
    private PreparedStatement ps = null;
    private ResultSet rs = null;

    public AlterarFunPane(String nameConsulta) {
        initComponents();
        this.setBorder(null);
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.nameConsulta = nameConsulta;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        desktopPaneAlterar = new javax.swing.JDesktopPane();

        jLabel1.setText("Alterar : ");

        jButton1.setText("Endereço pessoal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Dados pessoais");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Formas de contato");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Dados bancários");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout desktopPaneAlterarLayout = new javax.swing.GroupLayout(desktopPaneAlterar);
        desktopPaneAlterar.setLayout(desktopPaneAlterarLayout);
        desktopPaneAlterarLayout.setHorizontalGroup(
            desktopPaneAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        desktopPaneAlterarLayout.setVerticalGroup(
            desktopPaneAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 429, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jButton2)
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addGap(40, 40, 40)
                .addComponent(jButton4)
                .addGap(40, 40, 40)
                .addComponent(jButton3)
                .addContainerGap(320, Short.MAX_VALUE))
            .addComponent(desktopPaneAlterar)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(desktopPaneAlterar))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        desktopPaneEndereco = new AlterarFunPaneEndereco(nameConsulta);
        desktopPaneAlterar.add(desktopPaneEndereco);
        desktopPaneEndereco.setSize(desktopPaneAlterar.getSize());
        desktopPaneEndereco.setLocation(0, 0);
        desktopPaneEndereco.show();

        try {
            if (conn == null || conn.isClosed()) {
                conn = myConnection.getConexao();
            } else {
                myConnection.closeConnection(conn, ps);
                conn = myConnection.getConexao();
            }

            String sql = "SELECT f.nome, f.cpf, ed.cep, ed.cidade, ed.bairro, ed.numero, ed.complemento, ed.rua "
                    + "FROM paciente f "
                    + "JOIN endereco ed ON f.id_endereco = ed.id_endereco "
                    + "WHERE f.nome = ?";

            ps = conn.prepareStatement(sql);

            ps.setString(1, nameConsulta);

            rs = ps.executeQuery();

            while (rs.next()) {
                desktopPaneEndereco.setTextFieldAlterarCEP(rs.getString("cep"));
                desktopPaneEndereco.setTextFieldAlterarBairro(rs.getString("bairro"));
                desktopPaneEndereco.setTextFieldAlterarCidade(rs.getString("cidade"));
                desktopPaneEndereco.setTextFieldAlterarComplemento(rs.getString("complemento"));
                desktopPaneEndereco.setTextFieldAlterarNumero(rs.getString("numero"));
                desktopPaneEndereco.setTextFieldAlterarRua(rs.getString("rua"));
            }

        } catch (SQLException e) {
            JOptionPane.showInternalMessageDialog(getDesktopPane(), "ERRO AO CONECTAR! " + e.getMessage());
        } finally {
            myConnection.closeConnection(conn, ps, rs);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        desktopPaneDadosBancarios = new AlterarFunPaneDadosBancarios(nameConsulta);
        desktopPaneAlterar.add(desktopPaneDadosBancarios);
        desktopPaneDadosBancarios.setSize(desktopPaneAlterar.getSize());
        desktopPaneDadosBancarios.setLocation(0, 0);
        desktopPaneDadosBancarios.show();

        try {

            if (conn == null || conn.isClosed()) {
                conn = myConnection.getConexao();
            } else if (conn != null || !conn.isClosed()) {
                myConnection.closeConnection(conn, ps);
                conn = myConnection.getConexao();
            }

            String sql = "SELECT p.nome, p.cpf, db.agencia, db.nome_banco, db.salario, db.numero_conta "
                    + "FROM paciente p "
                    + "JOIN dados_bancarios db ON p.numero_conta_bancaria = db.numero_conta "
                    + "WHERE p.nome = ?";

            ps = conn.prepareStatement(sql);
            ps.setString(1, nameConsulta);

            rs = ps.executeQuery();

            while (rs.next()) {
                desktopPaneDadosBancarios.setTextFieldAlterarAgencia(rs.getString("agencia"));
                desktopPaneDadosBancarios.setTextFieldAlterarNomeBanco(rs.getString("nome_banco"));
                desktopPaneDadosBancarios.setTextFieldAlterarSalario(rs.getString("salario"));
                desktopPaneDadosBancarios.setTextFieldAlterarNumeroConta(rs.getString("numero_conta"));
            }

        } catch (SQLException e) {
            JOptionPane.showInternalMessageDialog(getDesktopPane(),"Erro ao conectar banco de dados");
        } finally {
            myConnection.closeConnection(conn, ps);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        desktopPaneDadosPesosas = new AlterarFunPaneDadosPessoais(nameConsulta);
        desktopPaneAlterar.add(desktopPaneDadosPesosas);
        desktopPaneDadosPesosas.setSize(desktopPaneAlterar.getSize());
        desktopPaneDadosPesosas.setLocation(0, 0);
        desktopPaneDadosPesosas.show();

        try {
            if (conn == null || conn.isClosed()) {
                conn = myConnection.getConexao();
            } else {
                myConnection.closeConnection(conn, ps);
                conn = myConnection.getConexao();
                JOptionPane.showInternalMessageDialog(getDesktopPane(), "Erro ao conectar");
            }

            String sql = "SELECT * FROM paciente WHERE nome = ?";

            ps = conn.prepareStatement(sql);

            ps.setString(1, nameConsulta);

            rs = ps.executeQuery();

            while (rs.next()) {
                desktopPaneDadosPesosas.setTextFieldAlterarCPF(rs.getString("cpf"));

                String dataString = rs.getString("data_nascimento");
                LocalDate dataNascimento = LocalDate.parse(dataString);

                String dataFormatada = dataNascimento.format(dtf);

                desktopPaneDadosPesosas.setTextFieldAlterarDataNascimento(dataFormatada);
                desktopPaneDadosPesosas.setComboBoxEstadoCivil(rs.getString("estado_civil"));
                desktopPaneDadosPesosas.setComboBoxCargo(rs.getString("cargo"));
                desktopPaneDadosPesosas.setTextFieldAlterarNome(rs.getString("nome"));
            }

        } catch (SQLException e) {
            JOptionPane.showInternalMessageDialog(getDesktopPane(), "Erro ao conectar...");
        } finally {
            myConnection.closeConnection(conn, ps);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        desktopPaneContato = new AlterarFunContato(nameConsulta);
        desktopPaneAlterar.add(desktopPaneContato);
        desktopPaneContato.setSize(desktopPaneAlterar.getSize());
        desktopPaneContato.setLocation(0, 0);
        desktopPaneContato.show();

        try {
            if (conn == null || conn.isClosed()) {
                conn = myConnection.getConexao();
            } else if (conn != null || !conn.isClosed()) {
                myConnection.closeConnection(conn, ps);
                conn = myConnection.getConexao();
            }

            String sql = "SELECT p.nome, p.cpf, ct.email, ct.telefone "
                    + "FROM paciente p "
                    + "JOIN contato ct ON p.id_paciente = ct.id_paciente "
                    + "WHERE p.nome = ?";

            ps = conn.prepareStatement(sql);

            ps.setString(1, nameConsulta);

            rs = ps.executeQuery();

            while (rs.next()) {
                desktopPaneContato.setTextFieldAlterarEmail(rs.getString("email"));
                desktopPaneContato.setTextFieldAlterarTelefone(rs.getString("telefone"));

            }
        } catch (SQLException e) {
            JOptionPane.showInternalMessageDialog(getDesktopPane(), "Erro ao estabelecer conexao com o banco " + e.getMessage());
        } finally {
            myConnection.closeConnection(conn, ps);
        }

    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPaneAlterar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
